<ContentControl x:Name="depControl" x:Class="WpfBank.DepositControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:WpfBank" xmlns:viewmodels="clr-namespace:WpfBank.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:DepositViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Style="{StaticResource ResourceKey=BlackNavy}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Deposits" FontSize="20"/>
            <Button Content="Оформить перевод" Style="{StaticResource headerBtn}" FontSize="20" Background="#00000000" Margin="10,0,0,0" 
                    IsDefault="True" Command="{Binding TransferCommand}" IsEnabled="{Binding DepoFromSelected}" BorderBrush="#FF40E80F">
            </Button>
        </StackPanel>
        <DataGrid RowHeaderStyle="{StaticResource BlackNavy}" Style="{StaticResource ResourceKey=BlackNavy}" x:Name="depoGrid" Grid.Row="1" 
                  ItemsSource="{Binding DataSource}" DataContext="{Binding Mode=OneWay}" AutoGenerateColumns="False" 
                  RowStyle="{StaticResource RowStyle}" CellStyle="{StaticResource CellStyle}">
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Header="Number" Binding="{Binding Number}"/>
                <DataGridTextColumn Header="Size" Binding="{Binding Size}" EditingElementStyle="{StaticResource EditingCellTextBox}"/>
                <DataGridTextColumn Header="Rate" Binding="{Binding Rate}" EditingElementStyle="{StaticResource EditingCellTextBox}"/>
                <DataGridCheckBoxColumn x:Name="CapCheck" Header="Cap" Binding="{Binding Cap}" EditingElementStyle="{StaticResource EditCheckboxStyle}" 
                                        ElementStyle="{StaticResource ElementCheckBoxStyle}"/>
                <!--<DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource ElementCheckBoxStyle}">
                            -->
                <!--<Style.Setters>
                                <Setter Property="Command" Value="{Binding DataContext.SelCommand, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                <Setter Property="CommandParameter" Value="{Binding ElementName=depoGrid}"/>
                                <Setter Property="Command" Value="{Binding DataContext.EndDepoEditCommand, Mode=OneWay,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                <Setter Property="CommandParameter" Value="{Binding ElementName=depoGrid}"/>
                            </Style.Setters>-->
                <!--
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>-->
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelCommand}" CommandParameter="{Binding ElementName=depoGrid}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseRightButtonDown">
                    <i:InvokeCommandAction Command="{Binding RemoveDepoCommand}" CommandParameter="{Binding ElementName=depoGrid}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="CellEditEnding">
                    <i:InvokeCommandAction Command="{Binding EndDepoEditCommand}" CommandParameter="{Binding ElementName=depoGrid}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <i:InvokeCommandAction Command="{Binding CellChangedCommand}" CommandParameter="{Binding ElementName=depoGrid}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
    </Grid>
</ContentControl>
